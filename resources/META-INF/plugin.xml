<idea-plugin>
    <id>com.github.advanced-java-folding2</id>
    <name>Advanced Java Folding 2 (Fork)</name>
    <vendor email="android.rokitnicki@gmail.com" url="https://github.com/AntoniRokitnicki/AdvancedExpressionFolding">
        Antoni
    </vendor>

    <depends>com.intellij.modules.platform</depends>
    <depends config-file="methodCallFolding.xml">com.intellij.modules.java</depends>
    <depends config-file="expressionBuilder.xml">com.intellij.modules.java</depends>
    <resource-bundle>Bundle</resource-bundle>

    <extensions defaultExtensionNs="com.intellij">
        <!-- Entry point: Java folding builder delegating to expressionBuilder extensions -->
        <lang.foldingBuilder language="JAVA"
                             implementationClass="com.intellij.advancedExpressionFolding.AdvancedExpressionFoldingBuilder"/>
        <!-- Application-level service that persists plugin settings -->
        <applicationService
                serviceImplementation="com.intellij.advancedExpressionFolding.settings.AdvancedExpressionFoldingSettings"/>
        <!-- Listens for editor lifecycle to fold code one second after the editor opens and clear on release -->
        <editorFactoryListener implementation="com.intellij.advancedExpressionFolding.FoldingEditorCreatedListener"/>
        <!-- Adds an Alt+Enter intention on method names to fold calls dynamically -->
        <intentionAction>
            <language>JAVA</language>
            <className>
                com.intellij.advancedExpressionFolding.processor.methodcall.dynamic.AddDynamicMethodFoldingIntention
            </className>
        </intentionAction>

        <!-- Submits plugin errors to JetBrains Marketplace for diagnostics -->
        <errorHandler implementation="com.intellij.diagnostic.JetBrainsMarketplaceErrorReportSubmitter"/>

        <!-- Shows plugin options under Settings | Editor | Code Folding -->
        <editorOptionsProvider
                instance="com.intellij.advancedExpressionFolding.settings.view.SettingsConfigurable"
                id="editor.folding.advanced.expression"
                key="editor.folding.advanced.expression.displayName"
                bundle="Bundle"/>

        <notificationGroup id="Advanced Expression Folding"
                           displayType="BALLOON"
                           isLogByDefault="true"/>

        <!-- Suggests pseudo-annotations supported by the plugin -->
        <completion.contributor
                language="JAVA"
                implementationClass="com.intellij.advancedExpressionFolding.pseudo.MainAnnotationCompletionContributor"/>
        <completion.contributor
                language="JAVA"
                implementationClass="com.intellij.advancedExpressionFolding.pseudo.LoggableAnnotationCompletionContributor"/>
        <completion.contributor
                language="JAVA"
                implementationClass="com.intellij.advancedExpressionFolding.pseudo.TracingLoggableAnnotationCompletionContributor"/>
    </extensions>

    <actions>
        <group id="com.intellij.advancedExpressionFolding.AdvancedExpressionFoldingGroup"
               popup="true">
            <!-- Inserts group into the Code menu -->
            <add-to-group group-id="CodeMenu" anchor="last"/>
            <action id="com.intellij.advancedExpressionFolding.action.FindMethodsWithDefaultParametersAction"
                    class="com.intellij.advancedExpressionFolding.action.FindMethodsWithDefaultParametersAction"/>
        </group>

        <action id="com.intellij.advancedExpressionFolding.action.GlobalToggleFoldingAction"
                class="com.intellij.advancedExpressionFolding.action.GlobalToggleFoldingAction">
            <add-to-group group-id="CodeMenu" anchor="last"/>
        </action>

        <action id="com.intellij.advancedExpressionFolding.action.FoldingOnAction"
                class="com.intellij.advancedExpressionFolding.action.FoldingOnAction"
                icon="AllIcons.Actions.ArrowExpand">
            <add-to-group group-id="CodeMenu" anchor="last"/>
            <keyboard-shortcut first-keystroke="alt shift F" keymap="$default" replace-all="true"/>
            <keyboard-shortcut first-keystroke="alt T" keymap="Mac OS X 10.5+" replace-all="true"/>
        </action>

        <action id="com.intellij.advancedExpressionFolding.action.FoldingOffAction"
                class="com.intellij.advancedExpressionFolding.action.FoldingOffAction"
                icon="AllIcons.Actions.ArrowCollapse">
            <add-to-group group-id="CodeMenu" anchor="last"/>
            <keyboard-shortcut first-keystroke="alt shift D" keymap="$default"/>
            <keyboard-shortcut first-keystroke="alt Y" keymap="Mac OS X 10.5+" replace-all="true"/>
        </action>

        <!-- Hidden action invoked from settings to refresh folded text colors -->
        <action id="com.intellij.advancedExpressionFolding.action.UpdateFoldedTextColorsAction"
                class="com.intellij.advancedExpressionFolding.action.UpdateFoldedTextColorsAction"/>
    </actions>

    <extensionPoints>
        <!-- Handlers that fold calls to a particular method (e.g., Math.abs) -->
        <extensionPoint name="methodCallFolding"
                        interface="com.intellij.advancedExpressionFolding.processor.methodcall.AbstractMethodCall"
                        dynamic="true"/>

        <!-- Builders that create foldable representations for specific PsiElements -->
        <extensionPoint name="expressionBuilder"
                        interface="com.intellij.advancedExpressionFolding.processor.core.BuildExpression"
                        dynamic="true"/>
    </extensionPoints>



</idea-plugin>
